{
  "files.autoSave": "afterDelay",
  "security.workspace.trust.untrustedFiles": "open",
  "[python]": {
    "diffEditor.ignoreTrimWhitespace": false,
    "editor.formatOnType": true,
    "editor.wordBasedSuggestions": "off",
    "editor.defaultFormatter": "charliermarsh.ruff"
  },
  "editor.mouseWheelZoom": true,
  "code-runner.executorMap": {
    "javascript": "node",
    "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
    "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "zig": "zig run",
    "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "php": "php",
    "python": "set PYTHONIOENCODING=utf8 && $pythonPath -u $fullFileName",
    "perl": "perl",
    "perl6": "perl6",
    "ruby": "ruby",
    "go": "go run",
    "lua": "lua",
    "groovy": "groovy",
    "powershell": "powershell -ExecutionPolicy ByPass -File",
    "bat": "cmd /c",
    "shellscript": "bash",
    "fsharp": "fsi",
    "csharp": "scriptcs",
    "vbscript": "cscript //Nologo",
    "typescript": "ts-node",
    "coffeescript": "coffee",
    "scala": "scala",
    "swift": "swift",
    "julia": "julia",
    "crystal": "crystal",
    "ocaml": "ocaml",
    "r": "Rscript",
    "applescript": "osascript",
    "clojure": "lein exec",
    "haxe": "haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",
    "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
    "racket": "racket",
    "scheme": "csi -script",
    "ahk": "autohotkey",
    "autoit": "autoit3",
    "dart": "dart",
    "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
    "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
    "haskell": "runghc",
    "nim": "nim compile --verbosity:0 --hints:off --run",
    "lisp": "sbcl --script",
    "kit": "kitc --run",
    "v": "v run",
    "sass": "sass --style expanded",
    "scss": "scss --style expanded",
    "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    "FortranFreeForm": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran-modern": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran_fixed-form": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "fortran": "cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    "sml": "cd $dir && sml $fileName",
    "mojo": "mojo run"
  },
  "terminal.integrated.copyOnSelection": true,
  "explorer.confirmDelete": false,
  "http.proxy": "http://127.0.0.1:7890",
  "explorer.confirmPasteNative": false,
  "editor.minimap.enabled": true,
  "window.openFoldersInNewWindow": "on",
  "C_Cpp.simplifyStructuredComments": false,
  "git.enableSmartCommit": true,
  "workbench.iconTheme": "material-icon-theme",
  "wakatime.apiKey": "waka_6c023e88-302a-418a-aab6-04a496f66aac",
  "workbench.navigationControl.enabled": false,
  "mssql.enableRichExperiences": true,
  "database-client.autoSync": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "python.analysis.exclude": ["R-4.2.2"],
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "gitlens.views.commitDetails.files.layout": "list",
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.fontWeight": "400",
  "git.autofetch": true,
  "pythonPathSetter.sourceDirs": [],
  "code-runner.fileDirectoryAsCwd": true,
  "terminal.integrated.rightClickBehavior": "default",
  "code-runner.clearPreviousOutput": true,
  "cursor.cpp.disabledLanguages": ["markdown", "plaintext"],
  "python.analysis.completeFunctionParens": true,
  "workbench.editor.empty.hint": "hidden",
  "scm.inputFontFamily": "",
  "editor.fontVariations": false,
  "terminal.integrated.mouseWheelZoom": true,
  "editor.fontLigatures": true,
  "notebook.lineNumbers": "on",
  "syncSettings.resources": [
    "extensions",
    "keybindings",
    "settings",
    "snippets",
    "uiState"
  ],
  "syncSettings.ignoredSettings": ["editor.fontFamily"],
  "syncSettings.keybindingsPerPlatform": true,
  "syncSettings.hostname": "wendy Windows11 pro",
  "cursor.composer.shouldAllowCustomModes": true,
  "cursor.composer.shouldChimeAfterChatFinishes": true,
  "terminal.integrated.tabs.enabled": false,
  "explorer.fileNesting.patterns": {
    "*.ts": "${capture}.js",
    "*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
    "*.jsx": "${capture}.js",
    "*.tsx": "${capture}.ts",
    "tsconfig.json": "tsconfig.*.json",
    "package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml, bun.lockb",
    "*.sqlite": "${capture}.${extname}-*",
    "*.db": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.s3db": "${capture}.${extname}-*"
  },
  "augment.chat.userGuidelines": "By default, all responses must be in Chinese.\n\n# AI Full-Stack Development Assistant Guide\n\n## Core Thinking Patterns\nYou must engage in multi-dimensional deep thinking before and during responses:\n\n### Fundamental Thinking Modes\n- Systems Thinking: Three-dimensional thinking from overall architecture to specific implementation\n- Dialectical Thinking: Weighing pros and cons of multiple solutions  \n- Creative Thinking: Breaking through conventional thinking patterns to find innovative solutions\n- Critical Thinking: Multi-angle validation and optimization of solutions\n\n### Thinking Balance\n- Balance between analysis and intuition\n- Balance between detailed inspection and global perspective  \n- Balance between theoretical understanding and practical application\n- Balance between deep thinking and forward momentum\n- Balance between complexity and clarity\n\n### Analysis Depth Control  \n- Conduct in-depth analysis for complex problems\n- Keep simple issues concise and efficient\n- Ensure analysis depth matches problem importance\n- Find balance between rigor and practicality\n\n### Goal Focus\n- Maintain clear connection with original requirements\n- Guide divergent thinking back to the main topic timely\n- Ensure related explorations serve the core objective\n- Balance between open exploration and goal orientation\n\nAll thinking processes must:\n0. Presented in the form of a block of code + the title of the point of view, please note that the format is strictly adhered to and that it must include a beginning and an end.\n1. Unfold in an original, organic, stream-of-consciousness manner\n2. Establish organic connections between different levels of thinking\n3. Flow naturally between elements, ideas, and knowledge\n4. Each thought process must maintain contextual records, keeping contextual associations and connections\n\n## Technical Capabilities\n### Core Competencies\n- Systematic technical analysis thinking\n- Strong logical analysis and reasoning abilities  \n- Strict answer verification mechanism\n- Comprehensive full-stack development experience\n\n### Adaptive Analysis Framework\nAdjust analysis depth based on:\n- Technical complexity\n- Technology stack scope\n- Time constraints  \n- Existing technical information\n- User's specific needs\n\n### Solution Process\n1. Initial Understanding\n- Restate technical requirements\n- Identify key technical points\n- Consider broader context\n- Map known/unknown elements\n\n2. Problem Analysis  \n- Break down tasks into components\n- Determine requirements\n- Consider constraints\n- Define success criteria\n\n3. Solution Design\n- Consider multiple implementation paths\n- Evaluate architectural approaches\n- Maintain open-minded thinking\n- Progressively refine details\n\n4. Implementation Verification\n- Test assumptions\n- Verify conclusions\n- Validate feasibility\n- Ensure completeness\n\n## Output Requirements\n### Code Quality Standards\n- Always show complete code context for better understanding and maintainability.\n- Code accuracy and timeliness\n- Complete functionality\n- Security mechanisms\n- Excellent readability\n- Use markdown formatting\n- Specify language and path in code blocks\n- Show only necessary code modifications\n#### Code Handling Guidelines\n1. When editing code:\n   - Show only necessary modifications\n   - Include file paths and language identifiers\n   - Provide context with comments\n   - Format: \nlanguage:path/to/file\n\n2. Code block structure:\nlanguage:file/path\n   // ... existing code ...\n   {{ modifications }}\n   // ... existing code ...   \n### Technical Specifications\n- Complete dependency management\n- Standardized naming conventions\n- Thorough testing\n- Detailed documentation\n\n### Communication Guidelines\n- Clear and concise expression\n- Handle uncertainties honestly\n- Acknowledge knowledge boundaries\n- Avoid speculation\n- Maintain technical sensitivity\n- Track latest developments\n- Optimize solutions\n- Improve knowledge\n\n### Prohibited Practices\n- Using unverified dependencies\n- Leaving incomplete functionality\n- Including untested code\n- Using outdated solutions\n\n## Important Notes\n- Maintain systematic thinking for solution completeness\n- Focus on feasibility and maintainability\n- Continuously optimize interaction experience\n- Keep open learning attitude and updated knowledge\n- Disable the output of emoji unless specifically requested- By default, all responses must be in Chinese.\n",
  "gitlens.graph.layout": "editor",
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "files.associations": {
    "*.log": "Log"
  },
  "workbench.colorTheme": "New UI Dark",
  "[Log]": {
    "editor.defaultFormatter": "emilast.LogFileHighlighter"
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "log.error",
        "settings": {
          "foreground": "#FF0000",
          "fontStyle": "bold"
        }
      },
      {
        "scope": "log.warn",
        "settings": {
          "foreground": "#FFFF00"
        }
      },
      {
        "scope": "log.info",
        "settings": {
          "foreground": "#0000FF"
        }
      },
      {
        "scope": "log.debug",
        "settings": {
          "foreground": "#008000"
        }
      },
      {
        "scope": "log.trace",
        "settings": {
          "foreground": "#808080"
        }
      }
    ]
  },
  "gitlens.views.contributors.files.layout": "tree",
  "editor.minimap.showSlider": "always",
  "terminal.integrated.fontSize": 13,
  "i18n-ally.extract.keyMaxLength": 100,
  "Translate-next.defaultEngine": "google",
  "Translate-next.targetLanguage": "English",
  "Translate-next.parentLanguage": "Chinese",
  "dbcode.connections": [
    {
      "connectionId": "q1XNuNuwXYP2GcW-hpgTh",
      "name": "暮色安然redis",
      "driver": "redis",
      "connectionType": "host",
      "host": "206.238.178.136",
      "port": 6379,
      "ssl": false,
      "username": "default",
      "password": "",
      "savePassword": "secretStorage",
      "readOnly": false,
      "connectionTimeout": 30
    },
    {
      "connectionId": "ZdcODixjPXtROYQ0Cwxu4",
      "name": "风锐统计旧",
      "driver": "mysql",
      "connectionType": "host",
      "host": "8.131.242.239",
      "port": 3306,
      "ssl": false,
      "username": "fengrui",
      "password": "",
      "savePassword": "secretStorage",
      "database": "fengrui",
      "readOnly": false,
      "connectionTimeout": 30,
      "driverOptions": {
        "retrievePublickey": true
      }
    },
    {
      "connectionId": "VmaA6KME3Ck19PfchVXlK",
      "name": "风锐统计新",
      "driver": "mysql",
      "connectionType": "host",
      "host": "47.94.168.160",
      "port": 3306,
      "ssl": false,
      "username": "FreeStatisticsV2",
      "password": "",
      "savePassword": "secretStorage",
      "readOnly": false,
      "connectionTimeout": 30,
      "driverOptions": {
        "retrievePublickey": true
      }
    }
  ],
  "dbcode.resultLocation": "below",
  "workbench.editor.enablePreview": false,
  "cursor.cpp.enablePartialAccepts": true,
  "bracket-pair-colorizer-2.activeScopeCSS": [
    "borderStyle : solid",
    "borderWidth : 1px",
    "borderColor : {color}",
    "opacity: 0.5"
  ],
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "gitlens.graph.minimap.additionalTypes": [],
  "svg.preview.mode": "svg",
}
